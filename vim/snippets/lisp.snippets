snippet defp
	(defparameter ${1:name} ${2:value})${3}
snippet defv
	(defvar ${1:name} ${2:value})${3}
snippet defun
	(defun ${1:name} (${2:arguments})
	  ${3:body})
snippet let
	(let ((${1:name} ${2:value})${3: others})
	  ${4:body})
snippet flet
	(flet ((${1:name} (${2:arguments})
	         ${3:body})${4: others})
	  ${5:body})
snippet labels
	(labels ((${1:name} (${2:arguments})
	           ${3:body})${4: others})
	  ${5:body})
snippet when
	(when ${1:condition}
	      ${2:body})
snippet unless
	(unless ${1:condition}
	        ${2:body})
snippet cond
	(cond (${1:condition} ${2:body})
		  ${3:others})
snippet case
	(case ${1:item}
		 (${2:option} ${3:body})
		 ${4:others})
snippet mem
	(member ${1:item} ${2:list})
